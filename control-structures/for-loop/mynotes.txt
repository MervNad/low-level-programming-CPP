# variations of C++ for loop

1. basic form

for ( initialization ; condition ; increment)
	statement;

for ( initialization ; condition ; increment) {
	statement;
}

example1:

int i {0};

for (i = 1 ; i <= 5 ; ++i)
	cout << i << endl;

example2:

for (int i {1} ; i <= 5 ; ++i)
	cout << i << endl;

for (int i = 1 ; i <= 5 ; ++i)
	cout << i << endl;

i = 100; // ERROR i ONLY visible in the loop 

example3:
for (int i {1} ; i <= 10 ; ++i) {
	if (i % 2 == 0)
		cout << i << endl;
}

example4:

int scores [] {100, 90, 87};

for ( int i {0} ; i < 3 ; ++i) {
	cout << scores[i] << endl;
}

or 

for ( int i {0} ; i <=2 ; ++i) {
	cout << scores[i] << endl;
}

HOT-TIP: to prevent off by 1 error, use less than the SIZE of array or less or equal to SIZE - 1 of array.

2. comma operator
Not often used, but can be used to initialize loop variable, it allows you to separate expressions by a comma.
The associativity is right to left, and the result is the left most expression.

for (int i {1}, j {5} ; i <= 5 ; ++i, ++j) {
	cout << i << " * " << j << " : " << (i * j) << endl;
}

some other details...

The basic for loop is very clear and concise.
since the for loop's expressions are all optional, it is possible to have 
	- no initialization
	- no test
	- no increment

for (;;)
	cout << "Endless loop" << endl;

